#Encrypted By AMBOT
import base64 
exec(base64.b64decode('IyMjU0NSSVBUIEFNQk9UICEhIQojIS9iaW4vYmFzaAojdmVyc2lvbiAxLjAKcGlwMyBpbnN0YWxsIC1VIC1yIHJlcXVpcmVtZW50cy50eHQKY2xlYXIKcHJpbnRmICIgIFxlWzEwMW1cZVsxOzc3bSA6Ojo6Ojo6Ojo+Pj5XRUxDT01FIFRPPDw8Ojo6Ojo6Ojo6XGVbMG1cbiIgICAgIApwcmludGYgIiAgXGVbMTAxbVxlWzE7NzdtIDo6OkFNQk9UIE1heC1Ub29scyA6OjpcZVswbVxuIgoKcHl0aG9uMiBwd2RzLnB5CnB5dGhvbiBwd2RzLnB5CnB5dGhvbiByZXN0YXJ0LnB5CgojIFZhcmlhYmxlcwpiPSdcMDMzWzFtJwp1PSdcMDMzWzRtJwpibD0nXEVbMzBtJwpyPSdcRVszMW0nCmc9J1xFWzMybScKYnU9J1xFWzM0bScKbT0nXEVbMzVtJwpjPSdcRVszNm0nCnc9J1xFWzM3bScKZW5kYz0nXEVbMG0nCmVuZGE9J1wwMzNbMG0nCmJsdWU9J1xlWzE7MzRtJwpjeWFuPSdcZVsxOzM2bScKcmVkPSdcZVsxOzMxbScKCmZpZ2xldCBBTUJPVC1NSVgtVG9vbHMgfCBsb2xjYXQKCnNsZWVwIDEKCmVjaG8gLWUgJGci4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAg4paS4paS4paSICAg4paS4paS4paSIiAgIAplY2hvIC1lICRnIiAgQSDilpLilpLilpIgIE0g4paS4paS4paSICBCIOKWkuKWkuKWkiBPIOKWkuKWkuKWkiAgVCDilpLilpLilpIgIFQg4paS4paS4paSIEUgIOKWkuKWkuKWkiBSICDilpLilpLilpIgTSAg4paS4paS4paSIFUgIOKWkuKWkuKWkiBYIOKWkuKWkuKWkiIKZWNobyAtZSAkZyLilpLilpLilpIgICAg4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAgIOKWkuKWkuKWkiAgICDilpLilpLilpIgICAg4paS4paS4paSICAg4paS4paS4paSICIgCmVjaG8gLWUgJGJsIi4iCmVjaG8gLWUgJGJ1ICJfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fIgplY2hvIC1lICRidSAgIiBUb29scyAgICAgICA6IEFNQk9UIE1hWC1UT09MJHdoaXRlICAgICAgICAgICIgCmVjaG8gLWUgJGJ1ICAiIEF1dGhvciAgICAgIDogQWxsIE1hc3RlciBUZXJtdXggZXRjJHdoaXRlICAiIAplY2hvIC1lICRidSAgIiBUZWxlZ3JhbSAgICAgOiBAQU1CT1RZVCoqKiAkd2hpdGUgIiAKZWNobyAtZSAkYnUgICJUaGFuayxzIGZvciB1c2UgdGhpcyB0b29scyA6KSAgIgoKZWNobyAtZSAkYnUgICJfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18iIApzbGVlcCAxCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIENUUkwgKyBDCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwp0cmFwIGN0cmxfYyBJTlQKY3RybF9jKCkgewpjbGVhcgplY2hvIC1lICRyZWQifn4+IG9rLCAgLi4uICIKZWNobyAtZSAkY3lhbiIuLiIKc2xlZXAgMQplY2hvICIiCmVjaG8gLWUgJHIiLi4uIgpzbGVlcCAxCn0KCmxhZ2k9MQp3aGlsZSBbICRsYWdpIC1sdCAyMCBdOwpkbwoKc2xlZXAgMQplY2hvIC1lICRnIiAgICAg4paI4paI4paI4paI4paI4pWX4paI4paI4paI4paI4paI4pWX4paI4paI4paI4paI4paI4pWXTUVOVSDilojilojilojilojilojilZfilojilojilojilojilojilZfilojilojilojilojilojilZciCnNsZWVwIDIKZWNobyAtZSAkZyIgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysgIgplY2hvIC1lICRnICIgICBbIDFdIOKchSBQSElTSU5HIE1vcmUgTWF4IFRvb2xzJHtlbmRhfSI7CmVjaG8gLWUgJGcgIiAgIFsgMl0g4pyFIEhhY2sgSW5zdGFncmFtIEJydXRGb3JjZSR7ZW5kYX0iOwplY2hvIC1lICRnICIgICBbIDNdIOKchSBTcGFtIFNtcy1jYWxsJHtlbmRhfSI7CmVjaG8gLWUgJGcgIiAgIFsgNF0g4pyFIElwLVRyYWNrZXIke2VuZGF9IjsKZWNobyAtZSAkZyAiICAgWyA1XSDinIUgVGVsZUdyYW0gRnJlZSBQb3N0IFZpZXdzJHtlbmRhfSI7CmVjaG8gLWUgJGciICAgIFsgNl0g4pyFIERkb3MgQXR0YWNrIFRvb2xzJHtlbmRhfSI7CmVjaG8gLWUgJGcgIiAgIFsgN10g4p2OIFlvdXR1YmUgQXV0b1ZpZXcgIChTb29uKSI7CmVjaG8gLWUgJGcgIiAgIFsgOF0g4p2OIEhhY2sgR21haWwgIChTb29uKSI7CmVjaG8gLWUgJGcgIiAgIFsgOV0g4pyFIEF1dG8gVXBkYXRlIE1hWC1UT09MJHtlbmRhfSI7CmVjaG8gLWUgJGcgIiAgIFsxMF0gSG93IHRvIFVzZSB0aGUgVG9vbC9TaG9ydCBUdXRvcmlhbCAgKFNvb24pIiA7CmVjaG8gLWUgJGcgIiAgIFsgMF0gTW9kYXIvRXhpdC9LaWxsJHtlbmRhfSI7CmVjaG8gIiIKZWNobyAtZSAkYnUgIkNob29zZSBhY2NvcmRpbmcgdG8geW91ciB0YXN0ZSA6KSIgCmVjaG8gLWUgJGJ1ICJKb2luIFRvIENoYW5uZWw9PT4gQEFNQk9UWVQgPD09WyBkb24ndCBzdWJzY3JpYmUgYXV0byBiYXJyZW4gYmVjYXVzZSBvZiB0aGUgYm9zczp2XSIKcmVhZCAtcCAiPT09PT4iIHBpbCAgOwoKZmlnbGV0IEFNQk9ULU1peC1Ub29McyB8IGxvbGNhdAojcGhzIHNoZWxwaXMKCmNhc2UgJHBpbCBpbgoxKWFwdCB1cGRhdGUKYXB0IHVwZ3JhZGUKcGtnIGluc3RhbGwgb3BlbnNzaApwa2cgaW5zdGFsbCBjdXJsCmdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vQWJoaU1vZHN6WVQvU01GCmNkIFNNRgpiYXNoIGluc3RhbGwuc2gKYmFzaCBzbWYuc2gKCjs7CgojIHBocyBiZQoKMikgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9BYmhpTW9kc3pZVC9TTUYKY2QgU01GCnBpcDMgaW5zdGFsbCBjb2xvcmFtYQpiYXNoIHNldHVwCnB5dGhvbjMgaW5zYW0ucHkKc2xlZXAgMQplY2hvICJyb290IGR1bHUiCjs7CgojcGhzIHNvY2lhbGZpcwoKMykgYXB0IHVwZGF0ZQphcHQgdXBncmFkZQpnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL0FiaGlNb2RzellUL1NNRgpjZCBTTUYKcGlwMyBpbnN0YWxsIHRib21iCnBpcDMgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0CnB5dGhvbjMgYm9tYmVyLnB5Cgo7OwoKI0lwLVRyYWNrZXIKCjQpIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vQWJoaU1vZHN6WVQvU01GCmNkIFNNRi9JcC1UcmFja2VyCnBrZyBpbnN0YWxsIHB5dGhvbi1waXAKcGlwMyBpbnN0YWxsIC1VIC1yIHJlcXVpcmVtZW50cy50eHQKCjs7CgojaGFjayBpZwoKNSkgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9BTUJPVFRFU1QvQU1UR1ZpZXdzQm9UCmNkIEFNVEdWaWV3c0JvVApwaXAzIGluc3RhbGwgY29sb3JhbWEKcGlwMyBpbnN0YWxsIGJzNjQKcGlwIGluc3RhbGwgYnM2NApwaXAgaW5zdGFsbCAtciBhbS50eHQKcGlwMyBpbnN0YWxsIC1yIGFtLnR4dApweXRob24gYW0ucHkKcHl0aG9uMyBhbS5weQpzbGVlcCAxCmVjaG8gInJvb3QgZHVsdSIKCjs7Cgo2KSBhcHQgdXBkYXRlCmFwdCB1cGdyYWRlCmFwdCBpbnN0YWxsIGdpdApybSAtcmYgU01GCmdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vQWJoaU1vZHN6WVQvU01GCmNkIFNNRgpwaXAgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0CnBpcDMgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0CnB5dGhvbiBhbWRkb3MucHkKcHl0aG9uMyBhbWRkb3MucHkKOzsKCgo3KWdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vQWJoaU1vZHN6WVQvdHdlZXRzaGVsbApjZCB0d2VldHNoZWxsCmNobW9kICt4IHR3ZWV0c2hlbGwuc2gKYmFzaCB0d2VldHNoZWxsLnNoCnNsZWVwIDIKZWNobyAtZSAkZyAicm9vdCBkdWx1IG1ib2QiCgo7OwoKOCkgYXB0IHVwZGF0ZSAmJiBhcHQgdXBncmFkZQpnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL0FiaGlNb2RzellUL2dtYWlsc2hlbGwuZ2l0CmNkIGdtYWlsc2hlbGwKYmFzaCBnbWFpbHNoZWxsLnNoCnNsZWVwIDEKZWNobyAtZSAkZyJyb290IGR1bHUsIGJhcnUgYmlzYSBqYWxhbiAiCgo7OwoKOSkgYXB0IHVwZGF0ZSAmJiBhcHQgdXBncmFkZQpjZCAuLgpybSAtcmYgaGFjawpjZCAKcm0gLXJmIGhhY2sKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9BYmhpTW9kc3pZVC9oYWNrCmNkIGhhY2sKbHMKYmFzaCBhbS5zaApzbGVlcCAxCmVjaG8gLWUgJGciVXBkYXRlIERvbmUg4pyFIgoKOzsKCjEwKWVjaG8gLWUgJGJ1IlN0b2sgSGFiaXMiCgo7OwowKSBlY2hvIC1lICRidSJCeWUgIC0iIAplY2hvIC1lICRidSJUSEFOSydTIgpwcmludGYgIlxlWzEwM21cZVsxOzc3bUJZOyBGb3IgVXNlaW5nIEFNQk9UIE1heC1Ub29scyDwn6WxIFxlWzBtXG4iCnNsZWVwIDIKZXhpdAo7OwoKKikgZWNobyAiQ0hPT1NFIFRIRSBSSUdIVCBPTkUgISEiICB8IGxvbGNhdAplc2FjCmRvbmUKZG9uZQoK'))
